# Stage 1: Build
FROM node:18-alpine AS builder

# Install build dependencies
RUN apk add --no-cache python3 make g++

WORKDIR /app

# Copy package files
COPY package*.json ./
COPY tsconfig*.json ./
COPY config/ ./config/
COPY vite.config.production.ts ./vite.config.ts

# Install dependencies (production + dev for building)
RUN npm ci --legacy-peer-deps

# Copy source code
COPY src/ ./src/
COPY index.html ./

# Create public directory (since it's ignored by git)
RUN mkdir -p ./public

# Build arguments for environment variables
ARG VITE_API_BASE_URL
ARG VITE_WS_URL
ARG VITE_FIREBASE_PROJECT_ID
ARG VITE_GA_MEASUREMENT_ID
ARG VITE_VERSION

# Set build-time environment variables
ENV VITE_API_BASE_URL=$VITE_API_BASE_URL
ENV VITE_WS_URL=$VITE_WS_URL
ENV VITE_FIREBASE_PROJECT_ID=$VITE_FIREBASE_PROJECT_ID
ENV VITE_GA_MEASUREMENT_ID=$VITE_GA_MEASUREMENT_ID
ENV VITE_VERSION=$VITE_VERSION

# Build the application
ENV NODE_ENV=production
RUN npx vite build

# Stage 2: Production
FROM nginx:alpine

# Install additional tools
RUN apk add --no-cache curl tini

# Remove default nginx config
RUN rm -rf /etc/nginx/conf.d/*

# Copy nginx configuration
COPY nginx.simple.conf /etc/nginx/conf.d/default.conf

# Copy built assets from builder
COPY --from=builder /app/dist /usr/share/nginx/html

# Add non-root user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nextjs -u 1001

# Set permissions
RUN chown -R nextjs:nodejs /usr/share/nginx/html && \
    chown -R nextjs:nodejs /var/cache/nginx && \
    chown -R nextjs:nodejs /var/log/nginx && \
    touch /var/run/nginx.pid && \
    chown -R nextjs:nodejs /var/run/nginx.pid

# Security: Don't run as root
USER nextjs

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
  CMD curl -f http://localhost:8080/health || exit 1

# Use tini for proper signal handling
ENTRYPOINT ["/sbin/tini", "--"]

# Start nginx
CMD ["nginx", "-g", "daemon off;"]

EXPOSE 8080