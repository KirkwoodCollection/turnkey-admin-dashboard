name: Deploy Admin Dashboard to Production

on:
  push:
    branches: [main]
    paths:
      - 'TurnkeyHMS-workspace/turnkey-admin-dashboard/**'
      - '.github/workflows/deploy-admin-dashboard-production.yml'
  workflow_dispatch:
    inputs:
      force_deploy:
        description: 'Force deployment even without changes'
        required: false
        default: 'false'

env:
  SERVICE_NAME: admin-dashboard
  GCP_REGION: us-central1
  NODE_VERSION: '18'

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: TurnkeyHMS-workspace/turnkey-admin-dashboard/package-lock.json

      - name: Install dependencies
        working-directory: ./TurnkeyHMS-workspace/turnkey-admin-dashboard
        run: npm ci

      - name: Run linting
        working-directory: ./TurnkeyHMS-workspace/turnkey-admin-dashboard
        run: npm run lint

      - name: Run type checking
        working-directory: ./TurnkeyHMS-workspace/turnkey-admin-dashboard
        run: npm run type-check

      - name: Run unit tests
        working-directory: ./TurnkeyHMS-workspace/turnkey-admin-dashboard
        run: npm run test:unit -- --coverage

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          files: ./TurnkeyHMS-workspace/turnkey-admin-dashboard/coverage/lcov.info
          flags: admin-dashboard

  build:
    needs: test
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.version.outputs.version }}
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: TurnkeyHMS-workspace/turnkey-admin-dashboard/package-lock.json

      - name: Generate version
        id: version
        run: echo "version=${GITHUB_SHA::8}-$(date +%Y%m%d%H%M%S)" >> $GITHUB_OUTPUT

      - name: Install dependencies
        working-directory: ./TurnkeyHMS-workspace/turnkey-admin-dashboard
        run: npm ci

      - name: Build application
        working-directory: ./TurnkeyHMS-workspace/turnkey-admin-dashboard
        env:
          VITE_API_BASE_URL: https://api.turnkeyhms.com
          VITE_WS_URL: wss://api.turnkeyhms.com
          VITE_FIREBASE_PROJECT_ID: ${{ secrets.FIREBASE_PROJECT_ID }}
          VITE_GA_MEASUREMENT_ID: ${{ secrets.GA_MEASUREMENT_ID }}
          VITE_VERSION: ${{ steps.version.outputs.version }}
        run: |
          npm run build:production
          echo "${{ steps.version.outputs.version }}" > dist/version.txt

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-${{ steps.version.outputs.version }}
          path: TurnkeyHMS-workspace/turnkey-admin-dashboard/dist/
          retention-days: 7

  deploy-cdn:
    needs: build
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v3

      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-${{ needs.build.outputs.version }}
          path: ./dist

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Deploy to Cloud Storage
        run: |
          # Upload to versioned directory
          gsutil -m cp -r ./dist/* gs://turnkey-admin-dashboard-prod/v/${{ needs.build.outputs.version }}/

          # Update latest version
          gsutil -m rsync -r -d ./dist/ gs://turnkey-admin-dashboard-prod/latest/

          # Set cache headers
          gsutil -m setmeta -h "Cache-Control:public, max-age=31536000, immutable" \
            "gs://turnkey-admin-dashboard-prod/latest/**/*.js"
          gsutil -m setmeta -h "Cache-Control:public, max-age=31536000, immutable" \
            "gs://turnkey-admin-dashboard-prod/latest/**/*.css"
          gsutil -m setmeta -h "Cache-Control:public, max-age=3600, must-revalidate" \
            "gs://turnkey-admin-dashboard-prod/latest/**/*.html"

      - name: Invalidate CDN cache
        run: |
          gcloud compute url-maps invalidate-cdn-cache turnkey-admin-cdn \
            --path "/*" \
            --async

  deploy-cloud-run:
    needs: build
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v3

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Configure Docker
        run: gcloud auth configure-docker ${{ env.GCP_REGION }}-docker.pkg.dev

      - name: Build and push Docker image
        working-directory: ./TurnkeyHMS-workspace/turnkey-admin-dashboard
        run: |
          docker build \
            --build-arg VITE_API_BASE_URL=https://api.turnkeyhms.com \
            --build-arg VITE_WS_URL=wss://api.turnkeyhms.com \
            --build-arg VITE_FIREBASE_PROJECT_ID=${{ secrets.FIREBASE_PROJECT_ID }} \
            --build-arg VITE_GA_MEASUREMENT_ID=${{ secrets.GA_MEASUREMENT_ID }} \
            -f Dockerfile.production \
            -t ${{ env.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/turnkey-services/${{ env.SERVICE_NAME }}:${{ needs.build.outputs.version }} \
            -t ${{ env.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/turnkey-services/${{ env.SERVICE_NAME }}:latest \
            .

          docker push ${{ env.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/turnkey-services/${{ env.SERVICE_NAME }}:${{ needs.build.outputs.version }}
          docker push ${{ env.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/turnkey-services/${{ env.SERVICE_NAME }}:latest

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image ${{ env.GCP_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT }}/turnkey-services/${{ env.SERVICE_NAME }}:${{ needs.build.outputs.version }} \
            --region ${{ env.GCP_REGION }} \
            --platform managed \
            --port 8080 \
            --min-instances 2 \
            --max-instances 100 \
            --memory 512Mi \
            --cpu 1 \
            --timeout 60 \
            --concurrency 1000 \
            --service-account admin-dashboard-sa@${{ secrets.GCP_PROJECT }}.iam.gserviceaccount.com \
            --labels version=${{ needs.build.outputs.version }},service=admin-dashboard,env=production \
            --update-env-vars NODE_ENV=production \
            --no-allow-unauthenticated

  integration-tests:
    needs: [deploy-cdn, deploy-cloud-run]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: TurnkeyHMS-workspace/turnkey-admin-dashboard/package-lock.json

      - name: Install dependencies
        working-directory: ./TurnkeyHMS-workspace/turnkey-admin-dashboard
        run: npm ci

      - name: Run integration tests
        working-directory: ./TurnkeyHMS-workspace/turnkey-admin-dashboard
        run: npm run test:integration
        env:
          TEST_URL: https://admin.turnkeyhms.com

  rollback:
    needs: [integration-tests]
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      - name: Setup Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Rollback Cloud Run
        run: |
          gcloud run services update-traffic ${{ env.SERVICE_NAME }} \
            --to-revisions=PRIOR=100 \
            --region ${{ env.GCP_REGION }}

      - name: Notify rollback
        uses: 8398a7/action-slack@v3
        with:
          status: custom
          custom_payload: |
            {
              text: "ðŸ”´ Admin Dashboard deployment rolled back",
              attachments: [{
                color: 'danger',
                text: 'Deployment ${{ needs.build.outputs.version }} failed and was rolled back'
              }]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK }}